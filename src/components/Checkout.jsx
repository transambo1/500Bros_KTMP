import React, { useState, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";

function Checkout({ cart, currentUser, setCart }) {
    const navigate = useNavigate();

    const [checkoutCart, setCheckoutCart] = useState(cart || []);

    useEffect(() => {
        if (!checkoutCart || checkoutCart.length === 0) {
            const tempCart = JSON.parse(localStorage.getItem("checkoutCart")) || [];
            // Chuy·ªÉn claim sang number n·∫øu c·∫ßn
            const parsedCart = tempCart.map(item => ({
                ...item,
                claim: Number(item.claim) || 0
            }));
            setCheckoutCart(parsedCart);
        }
    }, [checkoutCart]);

    const total = checkoutCart.reduce((sum, item) => sum + item.price * item.quantity, 0);
    const totalClaim = checkoutCart.reduce((sum, item) => sum + (item.claim || 0), 0);

    const [storeName] = useState("B·∫£o hi·ªÉm T∆∞∆°ng Nai");
    const [storeAddress] = useState("123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM");
    const [customerAddress, setCustomerAddress] = useState("45 Nguy·ªÖn Tr√£i, Qu·∫≠n 5, TP.HCM, Vi·ªát Nam");
    const [form, setForm] = useState({ lastName: "", firstName: "", phone: "", email: "" });

    const handleChange = (e) => {
        const { name, value } = e.target;
        setForm({ ...form, [name]: value });
    };

    const handleCheckout = async () => {
        if (!currentUser) {
            alert("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ thanh to√°n!");
            navigate("/login");
            return;
        }

        if (!checkoutCart || checkoutCart.length === 0) {
            alert("Kh√¥ng c√≥ s·∫£n ph·∫©m ƒë·ªÉ thanh to√°n!");
            return;
        }

        // Chuy·ªÉn claim sang number l·∫ßn n·ªØa tr∆∞·ªõc khi g·ª≠i
        const updatedItems = checkoutCart.map(item => ({
            ...item,
            claim: Number(item.claim) || 0
        }));

        const newOrder = {
            userId: currentUser.id,
            customer: {
                name: `${form.lastName} ${form.firstName}`,
                phone: form.phone,
                email: form.email,
                address: customerAddress,
            },
            items: updatedItems,
            total: total,
            totalClaim: totalClaim, // t·ªïng claim c·ªßa to√†n b·ªô ƒë∆°n h√†ng
            status: "ƒêang x·ª≠ l√Ω",
            date: new Date().toISOString().split("T")[0]
        };

        try {
            await fetch("http://localhost:5005/orders", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(newOrder)
            });

            alert("ƒê·∫∑t ƒë∆°n h√†ng th√†nh c√¥ng!");

            setCart([]);
            localStorage.removeItem(`cart_${currentUser.username}`);
            localStorage.removeItem("checkoutCart");

            navigate("/order-history");
        } catch (error) {
            console.error("L·ªói khi l∆∞u order:", error);
            alert("C√≥ l·ªói x·∫£y ra khi ƒë·∫∑t h√†ng!");
        }
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        handleCheckout();
    };

    return (
        <div className="checkout-page">
            <div className="checkout-header">
                <Link to="/">
                    <button className="back-btn">‚¨Ö Quay l·∫°i</button>
                </Link>
                <h2>üîí TH√îNG TIN ƒê·∫∂T H√ÄNG</h2>
            </div>

            <div className="checkout-container">
                {/* Th√¥ng tin giao h√†ng */}
                <div className="checkout-info">
                    <div className="info-block">
                        <h3>B√™n A:</h3>
                        <input type="text" value={storeName} readOnly style={{ fontWeight: "bold" }} />
                        <p>{storeAddress}</p>
                    </div>

                    <div className="info-block">
                        <h2 className="text-xl font-bold mb-4">TH√îNG TIN KH√ÅCH H√ÄNG:</h2>
                        <form onSubmit={handleSubmit} className="space-y-4">
                            <div>
                                <label>H·ªç*</label>
                                <input type="text" name="lastName" value={form.lastName} onChange={handleChange} required />
                            </div>
                            <div>
                                <label>T√™n*</label>
                                <input type="text" name="firstName" value={form.firstName} onChange={handleChange} required />
                            </div>
                            <div>
                                <label>ƒêi·ªán tho·∫°i*</label>
                                <input type="tel" name="phone" value={form.phone} onChange={handleChange} required />
                            </div>
                            <div>
                                <label>Email*</label>
                                <input type="email" name="email" value={form.email} onChange={handleChange} required />
                            </div>
                            <div className="info-block">
                                <h3>ƒê·ªãa ch·ªâ c∆∞ tr√∫ hi·ªán t·∫°i:</h3>
                                <input
                                    type="text"
                                    value={customerAddress}
                                    onChange={(e) => setCustomerAddress(e.target.value)}
                                    style={{ width: "100%", height: "30px" }}
                                />
                                <iframe
                                    title="map"
                                    src={`https://maps.google.com/maps?q=${encodeURIComponent(customerAddress)}&z=15&output=embed`}
                                    width="100%"
                                    height="300"
                                    style={{ border: 0, margin: "20px 0px" }}
                                ></iframe>
                            </div>

                            <div>
                                <h3>Ph∆∞∆°ng th·ª©c thanh to√°n:</h3>
                                <label>
                                    <input type="radio" name="payment" value="cod" defaultChecked /> Thanh to√°n tr·ª±c ti·∫øp
                                </label>
                                <label>
                                    <input type="radio" name="payment" value="bank" /> Chuy·ªÉn kho·∫£n ng√¢n h√†ng
                                </label>


                            </div>
                        </form>
                    </div>
                </div>

                {/* T√≥m t·∫Øt ƒë∆°n h√†ng */}
                <aside className="checkout-summary">
                    <div className="summary-card">
                        <h3>T√ìM T·∫ÆT B·∫¢O HI·ªÇM:</h3>
                        <ul>
                            {checkoutCart.map(item => (
                                <li key={item.id}>
                                    <span>{item.name}</span>

                                    <span>{(item.price * item.quantity).toLocaleString()}‚Ç´</span>
                                </li>
                            ))}
                        </ul>

                        <div className="line">
                            <span>T·ªïng ti·ªÅn</span>
                            <strong>{total.toLocaleString()}‚Ç´</strong>
                        </div>
                        <button onClick={handleCheckout} className="btn-primary">Thanh to√°n khi nh·∫≠n h√†ng</button>
                    </div>
                </aside>
            </div>
        </div>
    );
}

export default Checkout;
